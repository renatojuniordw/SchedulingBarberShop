{"version":3,"sources":["webpack:///./src/app/pages/usuario/usuario.module.ts","webpack:///./src/app/pages/usuario/usuario.page.html","webpack:///./src/app/pages/usuario/usuario.page.scss","webpack:///./src/app/pages/usuario/usuario.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AAEV;AAEA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAYF;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAV7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,kEAAmB;aACpB;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;AC1B9B,ykC;;;;;;;;;;;ACAA,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AACR;AACC;AAQ7D;IAaE,qBAAoB,WAAwB,EAAU,WAAwB,EAClE,WAAwB;QADhB,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAClE,gBAAW,GAAX,WAAW,CAAa;QAXpC,iBAAY,GAAW,EAAE,CAAC;QAC1B,mBAAc,GAAW,EAAE,CAAC;QAE5B,wBAAmB,GAAG;YACpB,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,uBAAuB,EAAE;gBACtD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,yBAAyB,EAAE;aACxD;SACF,CAAC;QAIA,gCAAgC;QAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1C,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;oBAC5B,yDAAU,CAAC,QAAQ;iBACpB,CAAC,CAAC;SACJ,CAAC,CAAC;IACL,CAAC;IAED,8BAAQ,GAAR;IACA,CAAC;IAED,6BAAO,GAAP;QACE,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QACrC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;YACzE,sEAAsE;QACxE,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,qCAAe,GAAf;QAAA,iBAuBC;QAtBC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAAE,CAAC,IAAI,CACvC,UAAC,MAAM;YACL,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;YACnB,IAAI,MAAM,IAAI,KAAK,EAAE;gBACnB,kEAAkE;gBAClE,KAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC;aAC1C;iBACI,IAAI,MAAM,IAAI,IAAI,EAAE;gBACvB,KAAI,CAAC,WAAW,CAAC,WAAW,CAAC;oBAC3B,kBAAkB,EAAE,CAAC;iBACtB,CAAC,CAAC,IAAI,CACL,UAAC,OAAO;oBACN,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;wBACvC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;wBACxB,0CAA0C;qBAC3C;gBACH,CAAC,EAAE,UAAC,GAAG,IAAK,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAC7B,CAAC;aACH;QACH,CAAC,EAAE,UAAC,GAAG;YACL,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC;IACP,CAAC;IAzDU,WAAW;QANvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,qGAAkC;;SAEnC,CAAC;+EAeiC,0DAAW,EAAuB,yEAAW;YACrD,0EAAW;OAdzB,WAAW,CA0EvB;IAAD,kBAAC;CAAA;AA1EuB","file":"pages-usuario-usuario-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UsuarioPage } from './usuario.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UsuarioPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule\n  ],\n  declarations: [UsuarioPage]\n})\nexport class UsuarioPageModule { }\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Usuário</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content has-header=\\\"true\\\" padding=\\\"true\\\">\\n  <form (ngSubmit)=\\\"onClick()\\\" [formGroup]=\\\"formAlterUser\\\">\\n\\n    <ion-list>\\n\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\">Nome</ion-label>\\n        <ion-input type=\\\"text\\\" required formControlName=\\\"nome\\\"></ion-input>\\n      </ion-item>\\n\\n      <!-- <ion-input type=\\\"file\\\" required formControlName=\\\"img\\\"></ion-input> -->\\n      <ion-tab-button (click)=\\\"openImagePicker()\\\" >\\n        <ion-icon name=\\\"camera\\\"></ion-icon>\\n        <ion-label>Foto</ion-label>\\n      </ion-tab-button>\\n\\n      <br>\\n      <ion-row>\\n        <ion-button color=\\\"primary\\\" class=\\\"button button-full\\\" type=\\\"Submit\\\"\\n          [disabled]=\\\"!formAlterUser.valid\\\"\\n          block>\\n          atualizar dados\\n        </ion-button>\\n      </ion-row>\\n\\n    </ion-list>\\n\\n  </form>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzdWFyaW8vdXN1YXJpby5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { ImagePicker } from '@ionic-native/image-picker/ngx';\n\n@Component({\n  selector: 'app-usuario',\n  templateUrl: './usuario.page.html',\n  styleUrls: ['./usuario.page.scss'],\n})\n\nexport class UsuarioPage implements OnInit {\n\n  public formAlterUser: FormGroup;\n  errorMessage: string = '';\n  successMessage: string = '';\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'E-mail é obrigatório.' },\n      { type: 'pattern', message: 'Digite um email válido.' }\n    ]\n  };\n\n  constructor(private formBuilder: FormBuilder, private authService: AuthService\n    , private imagePicker: ImagePicker) {\n    // console.log(this.imagePicker)\n    this.formAlterUser = this.formBuilder.group({\n      nome: ['', Validators.compose([\n        Validators.required\n      ])]\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  onClick() {\n    console.log(this.formAlterUser.value)\n    this.authService.atualizarDadosUsuario(this.formAlterUser.value.nome).then(function () {\n      // this.menu.nomeUsuario = this.authService.userDetails().displayName;\n    });\n  }\n\n\n  openImagePicker() {\n    this.imagePicker.hasReadPermission().then(\n      (result) => {\n        console.log(result)\n        if (result == false) {\n          // no callbacks required as this opens a popup which returns async\n          this.imagePicker.requestReadPermission();\n        }\n        else if (result == true) {\n          this.imagePicker.getPictures({\n            maximumImagesCount: 1\n          }).then(\n            (results) => {\n              for (var i = 0; i < results.length; i++) {\n                console.log(results[i]);\n                // this.uploadImageToFirebase(results[i]);\n              }\n            }, (err) => console.log(err)\n          );\n        }\n      }, (err) => {\n        console.log(err);\n      });\n  }\n\n  // uploadImageToFirebase(image) {\n  //   image = normalizeURL(image);\n\n  //   //uploads img to firebase storage\n  //   this.firebaseService.uploadImage(image)\n  //     .then(photoURL => {\n\n  //       let toast = this.toastCtrl.create({\n  //         message: 'Image was updated successfully',\n  //         duration: 3000\n  //       });\n  //       toast.present();\n  //     })\n  // }\n\n}\n"],"sourceRoot":""}