{"version":3,"sources":["webpack:///./src/app/components/forms/form-cadastro/form-cadastro.component.html","webpack:///./src/app/components/forms/form-cadastro/form-cadastro.component.scss","webpack:///./src/app/components/forms/form-cadastro/form-cadastro.component.ts","webpack:///./src/app/pages/cadastrar/cadastrar.module.ts","webpack:///./src/app/pages/cadastrar/cadastrar.page.html","webpack:///./src/app/pages/cadastrar/cadastrar.page.scss","webpack:///./src/app/pages/cadastrar/cadastrar.page.ts"],"names":[],"mappings":"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","file":"pages-cadastrar-cadastrar-module.js","sourcesContent":["module.exports = \"<form (ngSubmit)=\\\"onClick()\\\" [formGroup]=\\\"formCad\\\">\\n\\n  <ion-list>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Nome</ion-label>\\n      <ion-input type=\\\"text\\\" required formControlName=\\\"nome\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">E-mail</ion-label>\\n      <ion-input type=\\\"email\\\" required formControlName=\\\"email\\\"></ion-input>\\n    </ion-item>\\n    <div class=\\\"validation-errors\\\">\\n      <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n        <div class=\\\"error-message\\\"\\n          *ngIf=\\\"formCad.get('email').hasError(validation.type) &&\\n          (formCad.get('email').dirty ||\\n          formCad.get('email').touched)\\\">\\n          {{ validation.message }}\\n        </div>\\n      </ng-container>\\n    </div>\\n\\n    <ion-item>\\n      <ion-label floating>Senha</ion-label>\\n      <ion-input [type]=\\\"isSenha ? 'text' : 'password'\\\" required\\n        formControlName=\\\"senha\\\"></ion-input>\\n      <button (click)=\\\"togglePasswordFieldType()\\\" color=\\\"medium\\\" type=\\\"button\\\">\\n        <ion-icon [name]=\\\"isSenha ? 'eye-off' : 'eye'\\\"></ion-icon>\\n      </button>\\n    </ion-item>\\n\\n    <br>\\n    <ion-row>\\n      <ion-button color=\\\"primary\\\" class=\\\"button button-full\\\" type=\\\"Submit\\\"\\n        [disabled]=\\\"!formCad.valid\\\"\\n        block>\\n        cadastrar\\n      </ion-button>\\n    </ion-row>\\n\\n  </ion-list>\\n\\n</form>\"","module.exports = \"form {\\n  margin: 50% 0% 50% 0%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9mb3Jtcy9mb3JtLWNhZGFzdHJvL0M6XFxVc2Vyc1xcci5iLmRhLnNpbHZhLmp1bmlvclxcRGVza3RvcFxcSU9OSUNcXFNjaGVkdWxpbmcvc3JjXFxhcHBcXGNvbXBvbmVudHNcXGZvcm1zXFxmb3JtLWNhZGFzdHJvXFxmb3JtLWNhZGFzdHJvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kscUJBQXFCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2Zvcm1zL2Zvcm0tY2FkYXN0cm8vZm9ybS1jYWRhc3Ryby5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImZvcm0ge1xuICAgIG1hcmdpbjogNTAlIDAlIDUwJSAwJTtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { NavController, ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-form-cadastro',\n  templateUrl: './form-cadastro.component.html',\n  styleUrls: ['./form-cadastro.component.scss'],\n})\nexport class FormCadastroComponent implements OnInit {\n\n  public formCad: FormGroup;\n  errorMessage: string = '';\n  successMessage: string = '';\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'E-mail é obrigatório.' },\n      { type: 'pattern', message: 'Digite um email válido.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Senha é obrigatório' },\n      { type: 'minlength', message: 'A senha deve ter pelo menos 6 caracteres.' }\n    ]\n  };\n\n  isSenha: boolean;\n\n  constructor(private formBuilder: FormBuilder,\n    public toastController: ToastController,\n    private authService: AuthService) {\n    this.formCad = this.formBuilder.group({\n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])],\n      nome: ['', Validators.compose([\n        Validators.required\n      ])],\n      senha: ['', Validators.compose([\n        Validators.required,\n        Validators.minLength(6)\n      ])]\n    });\n  }\n\n  ngOnInit() { }\n\n  async presentToast(msg: string) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  tratarErros(errorCode: string) {\n    switch (errorCode) {\n      case 'auth/weak-password':\n        this.presentToast('A senha deve ter pelo menos 6 caracteres');\n        break;\n      case 'auth/invalid-email':\n        this.presentToast('E-mail inválido.');\n        break;\n      case 'auth/email-already-in-use':\n        this.presentToast('O endereço de e-mail já está sendo usado por outra conta.');\n        break;\n    }\n\n  }\n\n  tryRegister(value) {\n    this.authService.registerUser(value)\n      .then(res => {\n        this.authService.atualizarDadosUsuario(value.nome);\n      }, err => {\n        this.tratarErros(err.code)\n      })\n  }\n\n  onClick() {\n    this.tryRegister(this.formCad.value)\n  }\n\n  togglePasswordFieldType() {\n    this.isSenha = !this.isSenha;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CadastrarPage } from './cadastrar.page';\nimport { FormCadastroComponent } from 'src/app/components/forms/form-cadastro/form-cadastro.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CadastrarPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule\n  ],\n  declarations: [CadastrarPage, FormCadastroComponent]\n})\nexport class CadastrarPageModule {}\n","module.exports = \"\\n<ion-content has-header=\\\"true\\\" padding=\\\"true\\\">\\n  <div layout=\\\"row\\\" layout-align=\\\"space-around center\\\">\\n    <app-form-cadastro></app-form-cadastro>\\n  </div>\\n</ion-content>\\n\"","module.exports = \".scroll-content {\\n  display: table !important;\\n  width: 100% !important;\\n  height: 100% !important; }\\n\\n.scroll {\\n  display: table-cell;\\n  vertical-align: middle;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvY2FkYXN0cmFyL0M6XFxVc2Vyc1xcci5iLmRhLnNpbHZhLmp1bmlvclxcRGVza3RvcFxcSU9OSUNcXFNjaGVkdWxpbmcvc3JjXFxhcHBcXHBhZ2VzXFxjYWRhc3RyYXJcXGNhZGFzdHJhci5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSx5QkFBeUI7RUFDekIsc0JBQXNCO0VBQ3RCLHVCQUF1QixFQUFBOztBQUV6QjtFQUNFLG1CQUFtQjtFQUNuQixzQkFBc0I7RUFDdEIsa0JBQWtCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9jYWRhc3RyYXIvY2FkYXN0cmFyLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zY3JvbGwtY29udGVudCB7XG4gICAgZGlzcGxheTogdGFibGUgIWltcG9ydGFudDtcbiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50O1xuICAgIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xuICB9XG4gIC5zY3JvbGwge1xuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-cadastrar',\n  templateUrl: './cadastrar.page.html',\n  styleUrls: ['./cadastrar.page.scss'],\n})\nexport class CadastrarPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"],"sourceRoot":""}