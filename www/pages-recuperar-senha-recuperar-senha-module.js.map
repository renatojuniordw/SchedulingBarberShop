{"version":3,"sources":["webpack:///./src/app/pages/recuperar-senha/recuperar-senha.module.ts","webpack:///./src/app/pages/recuperar-senha/recuperar-senha.page.html","webpack:///./src/app/pages/recuperar-senha/recuperar-senha.page.scss","webpack:///./src/app/pages/recuperar-senha/recuperar-senha.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AAEV;AAEe;AAE5D,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,wEAAkB;KAC9B;CACF,CAAC;AAYF;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QAVpC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,kEAAmB;aACpB;YACD,YAAY,EAAE,CAAC,wEAAkB,CAAC;SACnC,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;AC1BrC,q9BAAq9B,sBAAsB,sVAAsV,cAAc,uDAAuD,gBAAgB,2F;;;;;;;;;;;ACAt5C,+DAA+D,uK;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AACJ;AACJ;AAO5D;IAOE,4BAAoB,WAAwB,EACnC,OAAsB,EACtB,eAAgC,EAC/B,WAAwB;QAHd,gBAAW,GAAX,WAAW,CAAa;QACnC,YAAO,GAAP,OAAO,CAAe;QACtB,oBAAe,GAAf,eAAe,CAAiB;QAC/B,gBAAW,GAAX,WAAW,CAAa;QAPlC,iBAAY,GAAW,EAAE,CAAC;QAC1B,mBAAc,GAAW,EAAE,CAAC;QAiC5B,wBAAmB,GAAG;YACpB,OAAO,EAAE;gBACP,EAAE,IAAI,EAAE,UAAU,EAAE,OAAO,EAAE,uBAAuB,EAAE;gBACtD,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,yBAAyB,EAAE;aACxD;SACF,CAAC;QA/BA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;oBAC7B,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,OAAO,CAAC,iDAAiD,CAAC;iBACtE,CAAC,CAAC;SACJ,CAAC,CAAC;IACL,CAAC;IAED,oCAAO,GAAP;QAAA,iBAKC;QAJC,IAAI,CAAC,WAAW,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE;YAClE,KAAI,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YAClC,KAAI,CAAC,YAAY,CAAC,6BAA6B,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAQ,GAAR;IACA,CAAC;IAEK,yCAAY,GAAlB,UAAmB,GAAW;;;;;4BACd,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,OAAO,EAAE,GAAG;4BACZ,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;KACjB;IAnCU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,6HAA0C;;SAE3C,CAAC;+EAQiC,0DAAW;YAC1B,4DAAa;YACL,8DAAe;YAClB,yEAAW;OAVvB,kBAAkB,CA4C9B;IAAD,yBAAC;CAAA;AA5C8B","file":"pages-recuperar-senha-recuperar-senha-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RecuperarSenhaPage } from './recuperar-senha.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecuperarSenhaPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ReactiveFormsModule\n  ],\n  declarations: [RecuperarSenhaPage]\n})\nexport class RecuperarSenhaPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>Recuperar senha</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content has-header=\\\"true\\\" padding=\\\"true\\\">\\n  <div layout=\\\"row\\\" layout-align=\\\"space-around center\\\">\\n    <form (ngSubmit)=\\\"onClick()\\\" [formGroup]=\\\"formEmail\\\">\\n      <ion-list>\\n        <ion-item>\\n          <ion-label position=\\\"floating\\\">E-mail</ion-label>\\n          <ion-input type=\\\"email\\\" required formControlName=\\\"email\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n            <div class=\\\"error-message\\\"\\n              *ngIf=\\\"formEmail.get('email').hasError(validation.type) &&\\n              (formEmail.get('email').dirty ||\\n              formEmail.get('email').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n\\n        <br>\\n        <ion-row>\\n          <ion-button color=\\\"primary\\\" class=\\\"button button-full\\\" type=\\\"Submit\\\"\\n            [disabled]=\\\"!formEmail.valid\\\"\\n            block>\\n            Recuperar\\n          </ion-button>\\n          <label class=\\\"error-message\\\">{{errorMessage}}</label>\\n          <label class=\\\"success-message\\\">{{successMessage}}</label>\\n        </ion-row>\\n\\n      </ion-list>\\n\\n    </form>\\n  </div>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3JlY3VwZXJhci1zZW5oYS9yZWN1cGVyYXItc2VuaGEucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-recuperar-senha',\n  templateUrl: './recuperar-senha.page.html',\n  styleUrls: ['./recuperar-senha.page.scss'],\n})\nexport class RecuperarSenhaPage implements OnInit {\n\n  public formEmail: FormGroup;\n  errorMessage: string = '';\n  successMessage: string = '';\n\n\n  constructor(private formBuilder: FormBuilder,\n    public navCtrl: NavController,\n    public toastController: ToastController,\n    private authService: AuthService) {\n    this.formEmail = this.formBuilder.group({\n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])]\n    });\n  }\n\n  onClick() {\n    this.authService.sendPasswordResetEmail(this.formEmail.value.email, () => {\n      this.navCtrl.navigateForward('/');\n      this.presentToast('E-mail enviado com sucesso.');\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  async presentToast(msg: string) {\n    const toast = await this.toastController.create({\n      message: msg,\n      duration: 2000\n    });\n    toast.present();\n  }\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'E-mail é obrigatório.' },\n      { type: 'pattern', message: 'Digite um email válido.' }\n    ]\n  };\n\n}\n"],"sourceRoot":""}